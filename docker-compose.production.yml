version: '3'
services:
    laravel.prod:
        build:
            context: ./api
            dockerfile: docker/Dockerfile.production
            args:
                APP_PORT: '80'
                APP_SERVICE: 'laravel.test'
                DB_PORT: '3306'
        image: sail-8.0/app
        ports:
            - '8080:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
        networks:
            - application
        depends_on:
            - mysql
            - redis
    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        depends_on:
            -  laravel.prod
        ports:
            -   '80:80'
    mysql:
        image: 'mysql:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        networks:
            - application
        healthcheck:
          test: ["CMD", "mysqladmin", "ping"]
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        networks:
            - application
        healthcheck:
          test: ["CMD", "redis-cli", "ping"]
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        networks:
            - application
    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - application
    next.prod:
        build:
          context: ./next
          dockerfile: docker/Dockerfile.production
        ports:
            - '3000:3000'
        networks:
            - application
networks:
    application:
        driver: bridge

